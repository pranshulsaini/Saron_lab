% This code is written to do reconstruction of EEG channel data after
% removing sources based on OUT file generated by the wrapper script
%  The code generates the outputfiles in a directory prepended with 'recon_' in a subject's Eyes Open
% or Eyes Closed folder depending on which wrapper script is run. 

function reconEEGdata_forRestdata(eegfile, reconType, dataloc, outfile)
        mkdir([dataloc,[eegfile, '_FULLrecon']]);
        outloc =[dataloc,[eegfile, '_FULLrecon']]; 
        cd (outloc);
        if exist(dataloc,'dir') ~= 7
           fprintf(1, '\nDirectory for the subject (%s) doesn''t exist, Run SOBI first');
           return;
        else 
           fprintf(1, '\nSubject''s directory exists, Continuing...'); 
        end  
        wfile = strrep([dataloc,outfile],'.out','_W.mat');
        wf = load(wfile);
        W = wf.W;
        St = wf.aST;
        toi = wf.toi;
        trig = wf.trig;
        BlockData = wf.BlockData;
        pathtooutfile = [dataloc, outfile];
        reconDatUsingOut(W, St, toi, trig, BlockData, pathtooutfile, reconType);     
%     end    
  end

% Output: reconstructed EEG data.
function reconDatUsingOut(W, St, toi, trig, BlockData, outfile, reconType)
    A = inv(W);
    fprintf(1,'\n File under consideration = %s\n',outfile);
    if reconType == 1  % artifacts chosen by vote
        artifacts = findArtifacts(outfile);
    elseif reconType == 2  % artifacts here are actually normal (included) ones
        artifacts = findArtifacts(outfile);
        artifacts = setdiff(1:size(W), artifacts) ;
    end
    
    temp_cap = A(:,setdiff(1:size(W,1),artifacts))*St(setdiff(1:size(W,1),artifacts),:);
    [t1,t2,t3] = fileparts(outfile);
    if reconType == 1
        Hdr = writeBESAsb_data(temp_cap, strcat('FULLrecon_',t2,'.dat'));
        writeBESAgeneric(strcat('FULLrecon_',t2,'.generic'), Hdr);
        writeBESAevt(strcat('FULLrecon_',t2,'.evt'), toi, trig, BlockData);
    elseif reconType == 2
        Hdr = writeBESAsb_data(temp_cap, strcat('FULLreconInverse_',t2,'.dat'));
        writeBESAgeneric(strcat('FULLreconInverse_',t2,'.generic'), Hdr);
        writeBESAevt(strcat('FULLreconInverse_',t2,'.evt'), toi, trig, BlockData);        
    end

end
function artifacts = findArtifacts(outfile)
    data = importdata(outfile);
    artifacts = [];
    if isfield(data,'textdata')
        for i = 1:1:size(data.textdata,1)
            ln = strsplit(' ', data.textdata{i});
            if strcmp(ln(2), 'emg') == 1 || strcmp(ln(2), 'peaks') == 1 || strcmp(ln(2), 'eog') == 1 || strcmp(ln(2), 'Reog') == 1
                artifacts = [artifacts str2num(cell2mat(ln(1)))];
            end
        end
    else
        for i = 1:1:size(data,1) 
            ln = strsplit(' ', data{i});
            if strcmp(ln(2), 'emg') == 1 || strcmp(ln(2), 'peaks') == 1 || strcmp(ln(2), 'eog') == 1 || strcmp(ln(2), 'Reog') == 1
                artifacts = [artifacts str2num(cell2mat(ln(1)))];
            end
        end
    end
end
function hdr = writeBESAsb_data(X_cap, new_file)
    fid = fopen(new_file, 'w','ieee-le');
    if fid == -1
       fprintf(1,'In writeBESAsb_data:: Can''t WRITE in the folder. Please check your permissions.\n');
       fprintf(1, 'I will quit now... press any key to continue...(no you can''t stop me :D\n');
       pause; 
       exit;
    end
    fwrite(fid, X_cap, 'float32');
    [hdr.nChans,hdr.nSamples] = size(X_cap);
    hdr.Fs = 2048;
    fclose(fid);
end
function writeBESAevt(evtfile, toi, trig, BlockData)
    % creating event file specifically for Eyes Open data.
    fid = fopen(evtfile,'w');
    if fid == -1
        fprintf(1,'Error creating Event File for Reconstruction of EEG data.\n');
        return;
    end
    fprintf(fid,'Tmu\tCode\tTriNo\tComnt\n');
    [a,b]=find(trig ==3);
    blockSize = 1000;
    for t = 1:1:size(toi,1)
        if t < BlockData(1)
       % Following command was used to print trigger at the beginning of
       % each trial.
         fprintf(fid, '%d\t%d\t%d\t%s\n', ((t-1)*blockSize)*1e3, 1, trig(b(1)+10), strcat('Trial: ',num2str(t)));
        else

        fprintf(fid, '%d\t%d\t%d\t%s\n', ((t-1)*blockSize+1)*1e3, 1, trig(t), strcat('Trial: ',num2str(t)));
    %   fprintf(fid, '%d\t%d\t%d\t%s\n', (trigIns/2048*.7)*1e3, 1, trig(b(4)+10), strcat('Trial: ',num2str(t+BlockData(1))));
        end
    end
    fclose(fid);  
end

function writeBESAgeneric(new_file, hdr)
    fid = fopen(new_file, 'w');
    fprintf(fid,'BESA Generic Data\n\n');
    fprintf(fid,'nChannels=%i\n\n', hdr.nChans);
    fprintf(fid,'sRate=%f\n\n', hdr.Fs);
    fprintf(fid,'nSamples=%i\n\n', hdr.nSamples);
    fprintf(fid,'format=float\n\n');
    fprintf(fid,'file=%s\n\n', strrep(new_file,'.generic','.dat'));
    fclose(fid);
end